import { Constants, FeedbackItem, FeedbackItemType, ReturnButton, FeedbackRecord, NavHeaderBar } from 'common';
import { AppStorageV2 } from '@kit.ArkUI';

@Entry
@ComponentV2
export struct FeedbackRecordPage {
  @Local feedbackList: FeedbackItem[] = []
  @Local windowTopHeight: number = AppStorage.get('windowTopHeight') as number || 38.77;
  @Local feedbackRecord: FeedbackRecord =
    AppStorageV2.connect(FeedbackRecord, 'feedbackRecord', () => new FeedbackRecord())!

  async initData() {
    this.feedbackList = this.feedbackRecord.feedbackList
  }

  aboutToAppear(): void {
    this.initData()
  }

  build() {
    NavDestination() {
      Column() {
        NavHeaderBar({
          title: '反馈记录',
          hasBackButton: true,
          hasBgColor: true,
          isMainPage: false,
        })
        Scroll() {
          Column() {
            if (this.feedbackList.length === 0) {
              Column({ space: 16 }) {
                Image($r('app.media.NoRecord'))
                  .width(120)
                  .height(120)
                  .fillColor('#CCCCCC')

                Text('暂无反馈记录')
                  .fontSize(16)
                  .fontColor($r('sys.color.font_secondary'))
              }
              .justifyContent(FlexAlign.Center)
              .alignItems(HorizontalAlign.Center)
              .height('90%')
            } else {
              ForEach(this.feedbackList, (item: FeedbackItemType) => {
                Column({ space: 12 }) {

                  Text('2025.06.06 周五 13:30:26')
                    .fontSize($r('sys.float.Body_S'))
                    .fontWeight(FontWeight.Medium)
                    .fontColor($r('sys.color.font_primary'))

                  Column() {
                    Text('问题描述')
                      .fontSize($r('sys.float.Body_L'))
                      .fontWeight(FontWeight.Medium)
                      .margin({ top: 12, bottom: 8 })

                    Text(item.description)
                      .fontSize($r('sys.float.Body_S'))
                      .fontWeight(FontWeight.Regular)
                      .fontColor($r('sys.color.font_secondary'))
                  }
                  .width(Constants.FULL_SIZE)
                  .alignItems(HorizontalAlign.Start)

                  Column() {
                    Text('问题截图')
                      .fontSize($r('sys.float.Body_L'))
                      .fontWeight(FontWeight.Medium)
                      .margin({ top: 12, bottom: 8 })
                    Row() {
                      ForEach(item.stageImageUris, (itemUri: string, index: number) => {
                        Image(itemUri).width(80).height(80).margin({ right: 8 })
                      }, (item: string) => `${item}+${new Date().toString()}`)
                    }
                  }
                  .alignItems(HorizontalAlign.Start)
                  .width(Constants.FULL_SIZE)
                }
                .backgroundColor($r('sys.color.background_primary'))
                .padding(12)
                .margin({ bottom: 12 })
                .width('100%')
                .borderRadius(16)
                .alignItems(HorizontalAlign.Start)
              }, (item: FeedbackItemType) => `${item.stageImageUris}+${new Date().toString()}`)
            }
          }
          .width('100%')
          .backgroundColor($r('sys.color.background_secondary'))
          .padding({
            top: 12,
            left: 16,
            right: 16,
            bottom: 12
          })
        }
        .width('100%')
        .margin({ bottom: 100 })
      }
      .height('100%')
      .width('100%')
      .backgroundColor($r('sys.color.background_secondary'))
    }.hideTitleBar(true)
  }
}


